name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  FOUNDRY_PROFILE: ci

jobs:
  foundry:
    name: Foundry Tests + PR Comment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Show Forge version
        run: forge --version

      - name: Build
        working-directory: evm
        run: forge build

      - name: Tests (with gas report)
        working-directory: evm
        run: |
          set +e
          forge test --gas-report -vvv | tee ../gas-report.txt
          echo $? > ../test-exit-code.txt
          set -e

      - name: Coverage (summary + lcov)
        working-directory: evm
        run: |
          set +e
          forge coverage --ir-minimum --exclude-tests --no-match-coverage '^script/' --report summary > ../coverage-summary.txt
          cov_summary_ec=$?
          forge coverage --ir-minimum --exclude-tests --no-match-coverage '^script/' --report lcov --out ../lcov.info
          cov_lcov_ec=$?
          echo $cov_summary_ec > ../cov-summary-exit.txt
          echo $cov_lcov_ec > ../cov-lcov-exit.txt
          set -e

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: evm-coverage-lcov
          path: lcov.info

      - name: Upload gas report artifact
        uses: actions/upload-artifact@v4
        with:
          name: gas-report
          path: gas-report.txt

      - name: Build PR comment (gas + coverage)
        if: github.event_name == 'pull_request'
        run: |
          # Strip ANSI escapes from gas report if any
          sed -r "s/\x1B\[[0-9;]*[mK]//g" gas-report.txt > gas-report-clean.txt || cp gas-report.txt gas-report-clean.txt
          {
            echo "<!-- ci-gas-coverage -->";
            echo "### CI: Gas Report and Coverage";
            echo;
            echo "<details><summary>Gas Report</summary>";
            echo;
            echo '```text';
            cat gas-report-clean.txt;
            echo '```';
            echo;
            echo "</details>";
            echo;
            echo "<details><summary>Coverage Summary</summary>";
            echo;
            echo '```text';
            cat coverage-summary.txt;
            echo '```';
            echo;
            echo "</details>";
            echo;
            echo "<sub>Test exit: $(cat test-exit-code.txt 2>/dev/null || echo N/A), Coverage(summary): $(cat cov-summary-exit.txt 2>/dev/null || echo N/A), Coverage(lcov): $(cat cov-lcov-exit.txt 2>/dev/null || echo N/A)</sub>";
          } > pr_comment.md

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-file: pr_comment.md
          edit-mode: replace
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- ci-gas-coverage -->'
      - name: Fail if tests failed
        run: |
          fail=0
          if [ -f test-exit-code.txt ] && [ "$(cat test-exit-code.txt)" != "0" ]; then
            echo "Tests failed; exiting with non-zero to fail job." >&2
            fail=1
          fi
          if [ -f cov-summary-exit.txt ] && [ "$(cat cov-summary-exit.txt)" != "0" ]; then
            echo "Coverage summary step failed; marking job failed." >&2
            fail=1
          fi
          if [ -f cov-lcov-exit.txt ] && [ "$(cat cov-lcov-exit.txt)" != "0" ]; then
            echo "Coverage lcov step failed; marking job failed." >&2
            fail=1
          fi
          if [ "$fail" != "0" ]; then exit 1; fi
